package WebService::Freshservice::API;

use v5.010;
use strict;
use warnings;
use Method::Signatures 20140224;
use JSON qw(from_json);
use MIME::Base64 qw( encode_base64 );
use LWP::UserAgent;
use Moo;
use namespace::autoclean;

# ABSTRACT: Request abstraction to the Freshservice API

# VERSION: Generated by DZP::OurPkg:Version

=head1 SYNOPSIS

  use WebService::Freshservice::API;

  my $request = WebService::Freshservice::API->new( apikey => 'xxxxxxxxxxxxxxxxxxxxxx' );

=head1 DESCRIPTION

Provides a light wrapper to LWP::UserAgent against the Freshservice APIs

=cut

has 'apikey'  => ( is => 'ro', required => 1 );
has 'apiurl'  => ( is => 'ro', default => sub { "https://imdexlimited.freshservice.com" } );
has '_ua'     => ( is => 'rw', lazy => 1, builder => 1 );

method _build__ua {
  my $ua = LWP::UserAgent->new( apikey => $self->apikey );
  $ua->agent('WebService-Freshservice');
  $ua->timeout(60);
  $ua->env_proxy;
  $ua->default_headers->push_header( 'Content-Type' => "application/json" );

  # The Freshservice api isn't standards complaint as far as auth goes. It returns 200 OK
  # whether you're authenticated or not and LWP doesn't provide credentials unless it
  # it is challenged to do so. I've raised a support case..
  $ua->default_headers->push_header( Authorization => "Basic ".encode_base64($self->apikey.":X" ) );
  return $ua;
}

method get_api ($endpoint) {
  my $result = $self->_ua->get($self->apiurl."/".$endpoint);
 
  # Try
  my $data = from_json($result->decoded_content);
  # Catch

  return $data;
}

1;
